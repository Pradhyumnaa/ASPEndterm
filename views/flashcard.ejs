<!DOCTYPE html>

<head>
    <title>Quizly - <%= subject.subject_name %> - <%= collection.collection_name %> </title>
    <link rel="stylesheet" href="/stylesheets/styles.css">
    <link rel="icon" type="image/x-icon" href="/images/favicon.png">

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css">

    <!-- Summernote style sheet link -->
    <link href="/summernote/summernote-lite.min.css" rel="stylesheet" type="text/css"/>

</head>

<body id="subjectBody">
<nav class="pt-5 pb-4 navbar navbar-expand-lg bg-body-white">
    <a class="navbar-brand" href="/">
        <img src="/images/navbarlogo.png" alt="Bootstrap" id="navbarLogo" width="121" height="50">
    </a>
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
            aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav ms-auto">
            <li class="nav-item">
                <a class="me-5 nav-link disabled"><%= user.nickname %></a>
            </li>
            <li class="nav-item">
                <a class="ps-5 pe-5 btn btn-primary" href="/logout" role="button">Log Out</a>
            </li>
        </ul>
    </div>
</nav>

<!-- Breadcrumbs component -->
<div class="mt-5 row">
    <div class="col-6">
        <nav style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/">Level <%= subject.level_id %></a></li>
                <li class="breadcrumb-item"><a
                            href="/collections/<%= subject.subject_name %>"><%= subject.subject_name %></a></li>
                <li class="breadcrumb-item active" aria-current="page"><%= collection.collection_name %></li>
            </ol>
        </nav>
    </div>
    <div class="col-6 text-end">
        <a id="startQuizButton" href="#">Start Quiz
            <i class="bi bi-play-circle-fill"></i>
        </a>
    </div>
</div>

<!-- Tabbed component -->
<ul class="nav nav-pills nav-fill mt-4 mb-5" id="myTab" role="tablist">
    <!-- Preview Cards tab -->
    <li class="nav-item" role="presentation">
        <button class="nav-link active" id="preview-tab" data-bs-toggle="tab" data-bs-target="#preview-tab-pane"
                type="button"
                role="tab" aria-controls="preview-tab-pane" aria-selected="true">Preview Cards
        </button>
    </li>
    <!-- Edit Cards tab -->
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="edit-tab" data-bs-toggle="tab" data-bs-target="#edit-tab-pane" type="button"
                role="tab" aria-controls="edit-tab-pane" aria-selected="false">Add/Edit Cards
        </button>
    </li>
    <!-- Browse Deck tab -->
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="browse-deck-tab" data-bs-toggle="tab" data-bs-target="#browse-deck-tab-pane"
                type="button"
                role="tab" aria-controls="browse-deck-tab-pane" aria-selected="false">Browse Deck
        </button>
    </li>
</ul>

<!-- Tab contents -->
<div class="tab-content" id="myTabContent">

    <!-- Tab view - Preview Cards -->
    <div class="tab-pane fade show active" id="preview-tab-pane" role="tabpanel" aria-labelledby="preview-tab"
         tabindex="0">
        <% flashcards.forEach(function(card) { %>
            <div class="card-preview-container mb-4">
                <!-- Question card -->
                <div class="card">
                    <div class="card-body">
                        <%- card.question %>
                    </div>
                </div>
                <!-- Answer card -->
                <div class="ms-4 card">
                    <div class="card-body">
                        <%- card.answer %>
                    </div>
                </div>
            </div>
        <% }) %>
    </div>

    <!-- Tab view - Edit Cards -->
    <div class="tab-pane fade" id="edit-tab-pane" role="tabpanel" aria-labelledby="edit-tab" tabindex="0">
        <!-- Collection ID is in a hidden element so it can be used by the save function -->
        <div style="display: none" id="collection_id"><%= collection_id %></div>
        <!-- Save button -->
        <div class="clearfix mb-4">
            <button type="button" class="btn btn-success float-end save-button">
                <svg xmlns="http://www.w3.org/2000/svg" height="16" width="16" viewBox="0 0 16 16" fill="currentColor">
                    <path transform="rotate(0,8,8) translate(0.124999053776207,0) scale(0.500000029802324,0.500000029802324)"
                          d="M3.2000003,25.599999C2.9000006,25.599999,2.6000004,25.9,2.6000004,26.2L2.6000004,28.2C2.6000004,28.499999,2.9000006,28.799999,3.2000003,28.799999L5.2000003,28.799999C5.5000005,28.799999,5.8000002,28.499999,5.8000002,28.2L5.8000002,26.2C5.8000002,25.9,5.5000005,25.599999,5.2000003,25.599999z M18.2,2.7999992L22.8,2.7999992 22.8,9.7999992 18.2,9.7999992z M6.4000006,1.2999992L6.4000006,9.0999994C6.4000006,10.5,7.5000002,11.599999,8.9000003,11.599999L22.3,11.599999C23.700001,11.599999,24.8,10.5,24.8,9.0999994L24.8,1.2999992z M4.1000004,0L27.000001,0 31.500001,4.499999 31.500001,10.099999 31.500001,11.799999 31.500001,29.299999 30.8,30.299999C30.099999,31.4,28.8,31.999999,27.400001,31.999999L4.1000004,31.999999C1.8000002,31.999999,0,30.2,0,27.9L0,4.0999994C0,1.7999992,1.8000002,0,4.1000004,0z"/>
                </svg>
                &nbsp; Save changes
            </button>
        </div>
        <!-- Container to hold all rich text editors -->
        <div class="mb-4 multi-card-container">
            <!-- Container for rich text editors -->
            <% flashcards.forEach(function(card) { %>
                <div class="single-card-container mb-4">
                    <div class="summernote"><%- card.question %></div>
                    <div class="summernote"><%- card.answer %></div>
                    <!-- Delete card button -->
                    <div>
                        <button type="button" class="btn btn-danger delete-card-btn">
                            <i class="bi bi-trash3-fill"></i>
                        </button>
                    </div>
                </div>
            <% }) %>
        </div>
        <!-- Button to add new flashcard -->
        <a class="me-4 mt-5 mb-4 btn btn-white" role="button" id="createNewFlashcardButton">Create New Flashcard</a>
    </div>

    <!-- Tab view - Browse Deck -->
    <div class="tab-pane fade mb-4" id="browse-deck-tab-pane" role="tabpanel" aria-labelledby="browse-deck-tab"
         tabindex="0">
        <!-- Adding carousel to browse flashcards -->
        <!-- HTML from https://www.w3schools.com/howto/howto_js_quotes_slideshow.asp -->
        <div class="slideshow-container">
            <!-- Question/Answer -->
            <% for (let i = 0; i < flashcards.length; i++) { %>
                <div class="mySlides">
                    <p>Card <%= i + 1 %> of <%= flashcards.length %></p>
                    <div class="flashcard-question"><%- flashcards[i].question %></div>
                    <div class="flashcard-answer" style="display: none"><%- flashcards[i].answer %></div>
                </div>
            <% } %>

            <!-- Next/prev buttons -->
            <a class="carousel-prev" onclick="plusSlides(-1)">&#10094;</a>
            <a class="carousel-next" onclick="plusSlides(1)">&#10095;</a>
        </div>

        <!-- Dots/bullets/indicators -->
        <div class="carousel-dot-container mb-4">
            <!-- For loop for button indicators -->
            <% for (let i = 0; i < flashcards.length; i++) { %>
                <span class="carousel-dot" onclick="currentSlide(<%= i + 1 %>)"></span>
            <% } %>
        </div>

        <!-- Reveal Question/Answer button -->
        <div class="d-flex justify-content-center">
            <button type="button" class="btn btn-success btn-lg" id="reveal-answer-button">Reveal Answer</button>
            <button type="button" style="display: none" class="btn btn-success btn-lg" id="hide-answer-button">Hide
                Answer
            </button>
        </div>

    </div>
</div>


<!-- Scripts for implementing Summernote and Bootstrap javascript -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-w76AqPfDkMBDXo30jS1Sgez6pr3x5MlQ1ZAGC+nuZB+EYdgRZgiwxhTBTkF7CXvN"
        crossorigin="anonymous"></script>
<script src="https://code.jquery.com/jquery-3.4.1.slim.min.js"
        integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n"
        crossorigin="anonymous"
></script>
<script src="/summernote/summernote-lite.min.js"></script>

<script>
    $(document).ready(function () {
        $('.summernote').summernote({
            //height: 150,  //set editable area's height
            toolbar: [
                ['font', ['bold', 'underline']],
                ['color', ['color']],
                ['para', ['ul', 'ol', 'paragraph']],
                ['table', ['table']],
                ['insert', ['link', 'picture']],
                ['view', ['codeview']],
            ],
        });
    });
</script>


<!-- Script for adding Question, Answer editors on button click -->
<script type="text/javascript">
    $(document).ready(function () {
        $('#createNewFlashcardButton').click(function (e) {
                e.preventDefault();

                let newFlashcardDiv = document.createElement('div');
                newFlashcardDiv.classList.add('single-card-container', 'mb-4');

                // Question editor
                $('<div class="summernote">Question</div>')
                    .appendTo(newFlashcardDiv)
                    .summernote({
                        toolbar: [
                            ['font', ['bold', 'underline']],
                            ['color', ['color']],
                            ['para', ['ul', 'ol', 'paragraph']],
                            ['table', ['table']],
                            ['insert', ['link', 'picture']],
                            ['view', ['codeview']],
                        ],
                    });
                // Answer editor
                $('<div class="summernote">Answer</div>')
                    .appendTo(newFlashcardDiv)
                    .summernote({
                        toolbar: [
                            ['font', ['bold', 'underline']],
                            ['color', ['color']],
                            ['para', ['ul', 'ol', 'paragraph']],
                            ['table', ['table']],
                            ['insert', ['link', 'picture']],
                            ['view', ['codeview']],
                        ],
                    });

                // Delete button
                const deleteBtnSVG = '<svg xmlns=\"http:\/\/www.w3.org\/2000\/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\r\n class=\"bi bi-trash3-fill\" viewBox=\"0 0 16 16\">\r\n                                <path d=\"M11 1.5v1h3.5a.5.5 0 0 1 0 1h-.538l-.853 10.66A2 2 0 0 1 11.115 16h-6.23a2 2 0 0 1-1.994-1.84L2.038 3.5H1.5a.5.5 0 0 1 0-1H5v-1A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5Zm-5 0v1h4v-1a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5ZM4.5 5.029l.5 8.5a.5.5 0 1 0 .998-.06l-.5-8.5a.5.5 0 1 0-.998.06Zm6.53-.528a.5.5 0 0 0-.528.47l-.5 8.5a.5.5 0 0 0 .998.058l.5-8.5a.5.5 0 0 0-.47-.528ZM8 4.5a.5.5 0 0 0-.5.5v8.5a.5.5 0 0 0 1 0V5a.5.5 0 0 0-.5-.5Z\"\/>\r\n <\/svg>';
                let deleteCardButton = document.createElement('div');
                $('<button type="button" class="btn btn-danger delete-card-btn"></button>')
                    .html(deleteBtnSVG).appendTo(deleteCardButton);
                // Append delete button to new flashcard div
                newFlashcardDiv.append(deleteCardButton);

                // Append the created flashcard to main container
                $('.multi-card-container').append(newFlashcardDiv);
            }
        );
    });

    // Function to delete flashcard
    $(document).on("click", ".delete-card-btn", function () {
        $(this).closest('.single-card-container').remove();
    });

    // Function to save flashcards
    $(document).on("click", ".save-button", function () {
        const flashcards = $('.single-card-container');
        const cards = [];
        const collectionId = parseInt($("#collection_id").text());
        flashcards.each(function (index) {
            const sides = $(this).children('.summernote');
            const question = $(sides[0]).summernote('code');
            const answer = $(sides[1]).summernote('code');
            cards.push([collectionId, question, answer]);
        });
        // From https://stackoverflow.com/questions/29775797/fetch-post-json-data
        fetch('/saveCardsOfCollection', {
            method: 'POST',
            headers: {
                'Accept': 'application/json, text/plain, */*',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({collection_id: collectionId, cards: cards})
        }).then(() => window.location.reload()); // Refresh page
    });

    // Javascript for carousel slide - Browse Deck tab
    // Adapted from https://www.w3schools.com/howto/howto_js_quotes_slideshow.asp
    let slideIndex = 1;
    showSlides(slideIndex);

    function hideAnswer() {
        $('.flashcard-answer').hide();
        $('.flashcard-question').show();
        $('#hide-answer-button').hide();
        $('#reveal-answer-button').show();
    }

    function plusSlides(n) {
        hideAnswer();
        showSlides(slideIndex += n);
    }

    function currentSlide(n) {
        hideAnswer();
        showSlides(slideIndex = n);
    }

    function showSlides(n) {
        let i;
        const slides = document.getElementsByClassName("mySlides");
        const dots = document.getElementsByClassName("carousel-dot");
        if (n > slides.length) {
            slideIndex = 1
        }
        if (n < 1) {
            slideIndex = slides.length
        }
        for (i = 0; i < slides.length; i++) {
            slides[i].style.display = "none";
        }
        for (i = 0; i < dots.length; i++) {
            dots[i].className = dots[i].className.replace(" carousel-active", "");
        }
        slides[slideIndex - 1].style.display = "block";
        dots[slideIndex - 1].className += " carousel-active";
    }

    // End of Javascript for Carousel

    // Function for reveal question/answer button
    $(document).on("click", "#reveal-answer-button", function () {
        $('.flashcard-answer').show();
        $('.flashcard-question').hide();
        $('#hide-answer-button').show();
        $('#reveal-answer-button').hide();
    });
    $(document).on("click", "#hide-answer-button", function () {
        hideAnswer();
    });
</script>

</body>
